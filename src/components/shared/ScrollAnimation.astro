---
interface Props {
  delay?: number;
  direction?: 'up' | 'down' | 'left' | 'right';
}

const { delay = 0, direction = 'up' } = Astro.props;
---

<div class="scroll-animate" data-delay={delay} data-direction={direction}>
  <slot />
</div>

<style>
  .scroll-animate {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.6s ease-out;
  }

  .scroll-animate[data-direction="down"] {
    transform: translateY(-20px);
  }

  .scroll-animate[data-direction="left"] {
    transform: translateX(20px);
  }

  .scroll-animate[data-direction="right"] {
    transform: translateX(-20px);
  }

  .scroll-animate.visible {
    opacity: 1;
    transform: translate(0);
  }
</style>

<script>
  function handleScroll() {
    const elements = document.querySelectorAll('.scroll-animate');
    
    elements.forEach((element) => {
      const rect = element.getBoundingClientRect();
      const delay = parseInt(element.getAttribute('data-delay') || '0');
      
      if (rect.top <= window.innerHeight * 0.8) {
        setTimeout(() => {
          element.classList.add('visible');
        }, delay);
      }
    });
  }

  // Initial check
  handleScroll();

  // Check on scroll
  window.addEventListener('scroll', handleScroll);
</script>